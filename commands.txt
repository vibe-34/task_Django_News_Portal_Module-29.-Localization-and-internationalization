1. Создать двух пользователей.
        user_1 = User.objects.create_user('user_1', password='password1')
        user_2 = User.objects.create_user('user_2', password='password2')

2. Создать два объекта модели Author, связанные с пользователями.
        author_1 = Author.objects.create(user=user_1)
        author_2 = Author.objects.create(user=user_2)

3. Добавить 4 категории в модель Category.
        category_1 = Category.objects.create(name='Спорт')
        category_2 = Category.objects.create(name='Музыка')
        category_3 = Category.objects.create(name='Кино')
        category_4 = Category.objects.create(name='Технологии')

4. Добавить 2 статьи и 1 новость.
        post_1 = Post.objects.create(author=author_1, choice_type='AR', title='Статья #1', content='Содержание статьи #1: Давным-давно ....')
        post_2 = Post.objects.create(author=author_2, choice_type='AR', title='Статья #2', content='Содержание статьи #2: В темном-темном лесу  ....')
        post_3 = Post.objects.create(author=author_1, choice_type='NW', title='Новость #1', content='Содержание новости #1: Сегодня впервые ....')
        post_4 = Post.objects.create(author=author_2, title='тест добавления', content='Статья добавлена без передачи параметра choice_type => проверка отработки значения по умолчанию')

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
        post_1.categories.add(category_3, category_4)
        post_2.categories.add(category_1)
        post_3.categories.add(category_2)

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
        comment_1 = Comment.objects.create(post_comment=post_1, user_comment=user_1, text='комментарий #1 к статье #1 от пользователя #1')
        comment_2 = Comment.objects.create(post_comment=post_2, user_comment=user_2, text='комментарий #1 к статье #2 от пользователя #2')
        comment_3 = Comment.objects.create(post_comment=post_3, user_comment=user_2, text='комментарий #1 к новости #1 от пользователя #2')
        comment_4 = Comment.objects.create(post_comment=post_1, user_comment=user_2, text='комментарий #2 к статье #1 от пользователя #2')
        comment_5 = Comment.objects.create(post_comment=post_3, user_comment=user_1, text='комментарий #2 к новости #1 от пользователя #1')

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
        post_1.like()
        post_1.like()
        post_1.like()
        post_1.dislike()
        post_2.like()
        post_3.like()
        post_3.dislike()
        comment_1.like()
        comment_1.like()
        comment_2.like()
        comment_2.dislike()
        comment_3.dislike()
        comment_4.dislike()
        comment_4.dislike()
        comment_4.like()
        comment_4.like()
        comment_4.like()

8. Обновить рейтинги пользователей.
        author_1.update_rating()
        author_2.update_rating()

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
        best_user = Author.objects.order_by('-rating').first()
        print(best_user.user.username, best_user.rating)

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
        best_post = Post.objects.order_by('-rating').first()
        print(best_post.time_in, best_post.author.user.username, best_post.rating, best_post.title, best_post.preview())

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
        for comment in best_post.comments.all():
            print(comment.time_in, comment.user_comment.username, comment.rating_comment, comment.text)
